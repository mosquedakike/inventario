@using Entities;
@using Business;

@inject NavigationManager NavManager

<div>
    <EditForm Model="oProduct">
        <div class="form-group">
            <label>Referencia:</label>
            <InputText @bind-Value="oProduct.ProductId" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label>Nombre del producto:</label>
            <InputText @bind-Value="oProduct.ProductName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label>Descripción:</label>
            <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control"></InputTextArea>
        </div>
        <div class="form-group">
            <label>Categoria:</label>
            <InputSelect class="form-control" @bind-Value="oProduct.CategoryId">
                <option value="">Seleccione Categoria</option>
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </InputSelect>
        </div>
        <input class="btn btn-primary" type="button" value="Guardar" @onclick="SaveProduct" />
    </EditForm>
</div>

@code {
    //Objeto de tipo ProductEntity
    ProductEntity oProduct = new ProductEntity();

    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = B_Category.CategoryList();

    }

    private void SaveProduct()
    {
        B_Product.CreateProduct(oProduct);
        NavManager.NavigateTo("product/list");
    }
}



