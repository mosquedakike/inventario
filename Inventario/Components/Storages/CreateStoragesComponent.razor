@using Entities;
@using Business;

@inject NavigationManager NavManager;

<EditForm Model="oStorage">
    <div class="form-group">
        <label>Bodega:</label>
        <InputSelect class="form-control" @bind-Value="oStorage.WarehouseId">
            <option @value="">Seleccione una bodega</option>
            @foreach (var warehouse in warehouses)
            {
                <option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>
            }
        </InputSelect>
    </div>
    <div class="form-group">
        <label>Producto:</label>
        <InputSelect class="form-control" @bind-Value="oStorage.ProductId">
            <option @value="">Seleccione un producto</option>
            @foreach (var product in products)
            {
                <option value="@product.ProductId">@product.ProductName</option>
            }
        </InputSelect>
    </div>
    <input class="btn btn-primary" type="button" value="Guardar" @onclick="SaveStorage"/>
</EditForm>

@code {
    StorageEntity oStorage = new StorageEntity();

    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();
    List<ProductEntity> products = new List<ProductEntity>();

    protected override async Task OnInitializedAsync()
    {
        warehouses = B_Warehouse.WarehoseList();
        products = B_Product.ProductList();
    }

    private void SaveStorage()
    {
        oStorage.LastUpdate = DateTime.Now;
        oStorage.StorageId = Guid.NewGuid().ToString();
        B_Storage.CreateStorage(oStorage);
        NavManager.NavigateTo("storage/list");
    }
}
